@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Rename & Download Files";
    var unprocessedFiles = ViewBag.UnprocessedFiles as List<string> ?? new List<string>();
    var processedFiles = ViewBag.ProcessedFiles as List<string> ?? new List<string>();
    var subjects = ViewBag.SubjectsList as SelectList;
    var candidatesData = ViewBag.CandidatesData as List<dynamic> ?? new List<dynamic>(); // Expecting list of { Value, Text }
}

<h1>@ViewData["Title"]</h1>

<!-- Display Success/Error Messages -->
@if (TempData["RenameSuccess"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["RenameSuccess"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["RenameError"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["RenameError"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


@if (!unprocessedFiles.Any() && !processedFiles.Any())
{
    <div class="alert alert-info" role="alert">
        You have no files uploaded. Go to the <a asp-controller="Upload" asp-action="Index">Upload</a> page first.
    </div>
}
else
{
    <div class="row">
        <!-- Renaming Section Column -->
        <div class="col-lg-6 mb-4">
            <h4>Rename Unprocessed Files</h4>
            @if (!unprocessedFiles.Any())
            {
                 <div class="alert alert-secondary" role="alert">
                    No unprocessed files found.
                 </div>
            }
            else
            {
                <form asp-action="RenameFiles" method="post" id="renameForm">
                    @Html.AntiForgeryToken()
                    <h5>1. Select Files to Process</h5>
                    <div class="list-group file-list-scrollable mb-3" style="max-height: 300px; overflow-y: auto; border: 1px solid #dee2e6; padding: 10px;">
                        @foreach (var fileName in unprocessedFiles) // Already sorted in controller
                        {
                            <div class="list-group-item list-group-item-action">
                                <input class="form-check-input me-2" type="checkbox" name="selectedFiles" value="@fileName" id="file_@fileName.Replace('.', '_')">
                                <label class="form-check-label stretched-link" for="file_@fileName.Replace('.', '_')">
                                    <i class="bi bi-file-earmark-arrow-up me-1"></i>@fileName @* Icon indicates unprocessed *@
                                </label>
                            </div>
                        }
                    </div>
                    <button type="button" class="btn btn-sm btn-outline-secondary mb-3" onclick="toggleCheckboxes(this, 'renameForm')">Select/Deselect All</button>

                    <h5 class="mt-3">2. Enter Renaming Details</h5>
                    <div class="mb-3">
                        <label for="subjectCode" class="form-label">Subject</label>
                        <select id="subjectCode" name="subjectCode" class="form-select" asp-items="subjects" required>
                            <option value="">-- Select Subject --</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="centreNumber" class="form-label">Centre Number</label>
                        <input type="text" id="centreNumber" name="centreNumber" class="form-control" value="100111" pattern="\d{6}" title="Centre number must be 6 digits" required />
                    </div>
                    <div class="mb-3">
                        <label for="candidateInput" class="form-label">Candidate</label>
                        <input class="form-control" list="candidateOptions" id="candidateInput" name="registrationNo" placeholder="Type to search or enter Reg No..." required pattern="\d{10}" title="Select a candidate or enter a 10-digit registration number">
                        <datalist id="candidateOptions">
                            @foreach (var candidate in candidatesData)
                            {
                                <option value="@candidate.Value">@candidate.Text</option>
                            }
                        </datalist>
                        <small class="form-text text-muted">Select from the list or enter the 10-digit registration number.</small>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Document Type (for selected files)</label>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="docType" id="docTypeCS" value="CS" required>
                            <label class="form-check-label" for="docTypeCS">Cover Sheet (CS)</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="docType" id="docTypeMS" value="MS">
                            <label class="form-check-label" for="docTypeMS">Mark Scheme (MS)</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="docType" id="docTypeProject" value="Project">
                            <label class="form-check-label" for="docTypeProject">Project File(s) (-1, -2, ...)</label>
                        </div>
                    </div>
                    <hr />
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-success"><i class="bi bi-pencil-square me-1"></i> Rename Selected Files</button>
                    </div>
                </form>
            }
        </div>

        <!-- Processed Files Column -->
        <div class="col-lg-6">
             <h4>Manage Processed Files</h4>
             @if (!processedFiles.Any())
             {
                  <div class="alert alert-secondary" role="alert">
                     No processed (renamed) files found.
                  </div>
             }
             else
             {
                <div class="mb-3">
                    <a asp-action="DownloadAllFiles" class="btn btn-outline-primary"><i class="bi bi-download me-1"></i> Download All (.zip)</a>
                    @* Add Download by Subject - requires a dropdown and likely JS/separate form *@
                    <div class="dropdown d-inline-block ms-2">
                      <button class="btn btn-outline-info dropdown-toggle" type="button" id="downloadSubjectDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-filter-circle me-1"></i> Download by Subject
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="downloadSubjectDropdown">
                        @foreach (SelectListItem subjectItem in subjects)
                        {
                            <li><a class="dropdown-item" asp-action="DownloadFilesBySubject" asp-route-subjectCode="@subjectItem.Value">@subjectItem.Text</a></li>
                        }
                         @if (!subjects.Any()) {
                             <li><span class="dropdown-item disabled">No subjects available</span></li>
                         }
                      </ul>
                    </div>
                </div>

                <div class="list-group file-list-scrollable" style="max-height: 450px; overflow-y: auto; border: 1px solid #dee2e6; padding: 10px;">
                     @foreach (var fileName in processedFiles) // Already sorted
                     {
                         <div class="list-group-item d-flex justify-content-between align-items-center">
                             <span><i class="bi bi-check-circle-fill text-success me-2"></i>@fileName</span> @* Icon indicates processed *@
                             <div>
                                 <a asp-action="DownloadFile" asp-route-fileName="@fileName" class="btn btn-sm btn-outline-primary me-1" title="Download @fileName"><i class="bi bi-download"></i></a>
                                 <form asp-action="DeleteFile" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this file: @fileName?');">
                                      @Html.AntiForgeryToken()
                                      <input type="hidden" name="fileName" value="@fileName" />
                                      <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete @fileName"><i class="bi bi-trash"></i></button>
                                 </form>
                             </div>
                         </div>
                     }
                </div>
             }
        </div>
    </div>
}

@section Scripts {
    <script>
        function toggleCheckboxes(button, formId) {
            const form = document.getElementById(formId);
            if (!form) return;
            const checkboxes = form.querySelectorAll('input[name="selectedFiles"]');
            let allChecked = true;
            checkboxes.forEach(cb => {
                if (!cb.checked) allChecked = false;
            });
            checkboxes.forEach(cb => cb.checked = !allChecked);
            button.textContent = allChecked ? 'Select All' : 'Deselect All';
        }

        // Optional: Validate datalist input to ensure a 10-digit number if not selected from list
        document.getElementById('renameForm')?.addEventListener('submit', function(event) { // Add null check for safety
            const candidateInput = document.getElementById('candidateInput');
            if (!candidateInput) return; // Exit if element not found

            const pattern = candidateInput.getAttribute('pattern');
            const regex = new RegExp('^' + pattern + '$');
            if (!regex.test(candidateInput.value)) {
                 // Check if the value exists in the datalist options
                 const options = document.querySelectorAll('#candidateOptions option');
                 let found = false;
                 options.forEach(opt => {
                     if (opt.value === candidateInput.value) {
                         found = true;
                     }
                 });

                 if (!found) {
                    alert('Please select a valid candidate from the list or enter a 10-digit registration number.');
                    candidateInput.focus();
                    event.preventDefault(); // Prevent form submission
                 }
            }
        });
    </script>
}
